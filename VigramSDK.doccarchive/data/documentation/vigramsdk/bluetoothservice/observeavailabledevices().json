{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vigramsdk\/bluetoothservice\/observeavailabledevices()"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/BluetoothService\/observeAvailableDevices()"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"observeAvailableDevices","kind":"identifier"},{"text":"() -> ","kind":"text"},{"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/StatePublisher","preciseIdentifier":"s:9VigramSDK14StatePublishera","kind":"typeIdentifier","text":"StatePublisher"},{"text":"<[","kind":"text"},{"preciseIdentifier":"c:objc(cs)CBPeripheral","text":"CBPeripheral","kind":"typeIdentifier"},{"text":"]>","kind":"text"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"CBPeripheral objects array"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Whenever a peripheral becomes (un)available, the respective publisher is updated accordingly.","type":"text"}]},{"name":"Available from SDK","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"0.5.3"}]}],"type":"aside"}]}],"abstract":[{"text":"Observes available peripherals matching the service’s identifiers.","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK","doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/BluetoothService"]]},"metadata":{"modules":[{"name":"VigramSDK"}],"role":"symbol","required":true,"title":"observeAvailableDevices()","roleHeading":"Instance Method","externalID":"s:9VigramSDK16BluetoothServiceP23observeAvailableDevices7Combine12AnyPublisherVySaySo12CBPeripheralCGs5NeverOGyF","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"observeAvailableDevices"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:9VigramSDK14StatePublishera","text":"StatePublisher"},{"kind":"text","text":"<["},{"text":"CBPeripheral","preciseIdentifier":"c:objc(cs)CBPeripheral","kind":"typeIdentifier"},{"text":"]>","kind":"text"}]},"references":{"doc://com.vigram.VigramSDK/documentation/VigramSDK":{"url":"\/documentation\/vigramsdk","abstract":[],"title":"VigramSDK","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","role":"collection","kind":"symbol"},"logo.png":{"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/logo.png"}],"alt":"Vigram logo.","type":"image"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/BluetoothService":{"role":"symbol","url":"\/documentation\/vigramsdk\/bluetoothservice","type":"topic","abstract":[{"type":"text","text":"A BluetoothService is used to handle bluetooth connections."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"BluetoothService","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"BluetoothService"}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/BluetoothService","title":"BluetoothService","kind":"symbol"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/BluetoothService/observeAvailableDevices()":{"required":true,"url":"\/documentation\/vigramsdk\/bluetoothservice\/observeavailabledevices()","identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/BluetoothService\/observeAvailableDevices()","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"observeAvailableDevices"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:9VigramSDK14StatePublishera","text":"StatePublisher","kind":"typeIdentifier"},{"text":"<[","kind":"text"},{"text":"CBPeripheral","preciseIdentifier":"c:objc(cs)CBPeripheral","kind":"typeIdentifier"},{"kind":"text","text":"]>"}],"title":"observeAvailableDevices()","abstract":[{"text":"Observes available peripherals matching the service’s identifiers.","type":"text"}],"role":"symbol"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/StatePublisher":{"title":"StatePublisher","role":"symbol","navigatorTitle":[{"text":"StatePublisher","kind":"identifier"}],"url":"\/documentation\/vigramsdk\/statepublisher","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StatePublisher","kind":"identifier"}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/StatePublisher","abstract":[{"text":"A Publisher that never emits a failure event.","type":"text"}],"kind":"symbol","type":"topic"}}}