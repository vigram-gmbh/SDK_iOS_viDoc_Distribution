{"hierarchy":{"paths":[["doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK"]]},"primaryContentSections":[{"content":[{"text":"What is the new on this release","level":2,"type":"heading","anchor":"What-is-the-new-on-this-release"},{"type":"heading","anchor":"Peripheral","level":4,"text":"Peripheral"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Added Dynamic state","type":"text"}]}]}]},{"inlineContent":[{"text":"If needed to set the dynamic state of viDoc perform the method","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["peripheral.setDynamicState(type: type)","    .sink(receiveCompletion: { completion in ","        \/\/ do something with completion state","    }) { messageIsAcknowledgeValue in ","        \/\/ do something with receive value","    }","    .store(in: &subscription)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"If needed to get the dynamic state of viDoc perform the method","type":"text"}]},{"code":["peripheral.getCurrentDynamicState()","    .sink(receiveCompletion: { completion in ","        \/\/ do something with completion state","    }) { value in","        switch state.current {","        case .pedestrian:","            \/\/ do something","        case .stationary:","            \/\/ do something","        @unknown default:","            break","        }","    }","    .store(in: &subscription)"],"syntax":"swift","type":"codeListing"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added the ability to update the viDoc software."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"If needed to check if a software update is needed use this variables","type":"text"}]},{"type":"codeListing","code":["var isNeedUpdateSoftware: StatePublisher<Bool>","var noticeSoftware: StatePublisher <(","current: DeviceMessage.Version.Software?, ","actual: DeviceMessage.Version.Software?",")>"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"If you need to update software viDoc, perform this method"}],"type":"paragraph"},{"code":["","peripheral.setUpdateSoftwareToNextStartup(","    Bool, ","    version: DeviceMessage.Version.Software",")"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"After reload viDoc is begining update software process.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Use the following variables to control the upgrade process"}],"type":"paragraph"},{"syntax":"swift","code":["var errorWrite: Bool ","var stateSoftwareUpdate: StatePublisher<StateUpdateSoftware> ","var progressSoftwareUpdate: StatePublisher<Double> "],"type":"codeListing"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Changed enum value from","type":"text"}]}]}]},{"code":["StateUpdateSoftware.startUpdate"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"on"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["StateUpdateSoftware.startUpdate(DeviceMessage.Version.Software)"]},{"inlineContent":[{"text":"where DeviceMessage.Version.Software is the version of the software being installed","type":"text"}],"type":"paragraph"},{"level":4,"text":"SinglePoint","anchor":"SinglePoint","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Added the ability to use pedestrian state of viDoc for SinglePoint measurent","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"If you need to use pedestrian or stationary dynamic state mode viDoc with SinglePoint measurements use this init"}],"type":"paragraph"},{"code":["\/\/ Init without laser","let singlePointService: SinglePointRecordingService = ","    Vigram.singlePointRecordingService(","        gpsService: GPSService, ","        peripheral: Peripheral, ","        dynamicStateType: DynamicStateType","    )","","\/\/ Init with laser","let singlePointService: SinglePointRecordingService = ","    Vigram.singlePointRecordingService(","        gpsService: GPSService, ","        laserService: LaserService, ","        peripheral: Peripheral, ","        dynamicStateType: DynamicStateType","    )"],"type":"codeListing","syntax":"swift"},{"level":4,"type":"heading","text":"SoftwareService","anchor":"SoftwareService"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If needed to get information about software for viDoc create a "},{"inlineContent":[{"text":"SoftwareService","type":"text"}],"type":"strong"},{"text":" object","type":"text"}]},{"syntax":"swift","code":["let softwareService: SoftwareService =","    Vigram.softwareService()","    ","let actualVersionSoftware: ","    SingleEventPublisher<DeviceMessage.Version.Software> = ","        softwareService.getActualVersionSoftware()","","let allVersionSoftware: ","    SingleEventPublisher<[DeviceMessage.Version.Software]> = ","        softwareService.getAllAvailableSoftware()"],"type":"codeListing"}],"kind":"content"}],"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/0.5.5"},"metadata":{"roleHeading":"Article","images":[{"identifier":"logo.png","type":"icon"}],"title":"0.5.5","modules":[{"name":"VigramSDK"}],"role":"article"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vigramsdk\/0.5.5"]}],"references":{"doc://com.vigram.VigramSDK/documentation/VigramSDK":{"title":"VigramSDK","kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK","url":"\/documentation\/vigramsdk","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/logo.png"}],"type":"image","alt":"Vigram logo.","identifier":"logo.png"}}}