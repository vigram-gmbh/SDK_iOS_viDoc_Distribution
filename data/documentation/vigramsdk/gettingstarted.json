{"primaryContentSections":[{"kind":"content","content":[{"anchor":"","level":2,"type":"heading","text":""},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use the SDK, you must first be authenticated."},{"type":"text","text":" "},{"type":"text","text":"Creates a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Authentication"},{"type":"text","text":" object to check your token."}]},{"type":"codeListing","syntax":"swift","code":["let autentication: Authentication =","    Vigram.initial(token:\"your token\")","    ","let check: SingleEventPublisher<Result<Bool, Error>> = ","    autentication.check()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This procedure must be performed once. After that, the token will work offline."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To connect to a viDoc device, first create a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/BluetoothService"},{"type":"text","text":", scan for available peripherals and to connect to a specific peripheral."}]},{"type":"codeListing","syntax":"swift","code":["let bluetoothService: BluetoothService = ","    Vigram.bluetoothService()","","let availableDevices: AnyPublisher<[CBPeripheral], Never> = ","    bluetoothService.observeAvailableDevices()","","let device: CBPeripheral = \/\/ ...","","let didConnect: AnyPublisher<CBPeripheral, Error> = ","    bluetoothService.connect(to: device.identifier)","    ","    bluetoothService.disconnect()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"After the connection has successfully been established, create a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Peripheral"},{"type":"text","text":" using the connected "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/corebluetooth\/cbperipheral"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"To make sure, that a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Peripheral"},{"type":"text","text":" works correctly, you will need to call the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Peripheral\/start()"},{"type":"text","text":" method and wait for its result before sending\/receiving data from or to it."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Peripheral"},{"type":"text","text":" allows sending of binary messages and receiving NMEA-0183 and device messages."}]},{"type":"codeListing","syntax":"swift","code":["let peripheral: Peripheral = ","    Vigram.peripheral(device)","","let didStart: SingleEventPublisher<Void> = ","    peripheral.start()","","let nmeaMessages: AnyPublisher<NMEAMessage, Never> = ","    peripheral.nmea","","let deviceMessages: AnyPublisher<DeviceMessage, Never> = ","    peripheral.deviceMessages","","let didSend: AnyPublisher<Void, Error> = ","    peripheral.send(Data(), chunkSize: 10)","    ","let softNotice: AnyPublisher<(Software?, Software)>? = ","    peripheral.softwareNotice()","    ","let isNeedUpdate: AnyPublisher<Bool> = ","    peripheral.isNeedSoftwareUpdate()","    ","let stateUpdate: AnyPublisher<StateUpdateSoftware?>? = ","    peripheral.softwareUpdateState()","    ","let progressUpdate: AnyPublisher<Double>? = ","    peripheral.softwareUpdateProgress()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to disconnect from the current peripheral, you need to call the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/BluetoothService\/disconnect()"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To correct the location data using a viDoc device, you can create a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/NtripService"},{"type":"text","text":", search for available mountpoints and create a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/NtripTask"},{"type":"text","text":" for one specific mountpoint."}]},{"type":"codeListing","syntax":"swift","code":["let ntripInformation = NtripConnectionInformation(","    hostname: \"hostname\", ","    port: 80, ","    username: \"user\", ","    password: \"password\"",")","","let ntripService: NtripService = ","    Vigram.ntripService()","","let mountpoints: AnyPublisher<[NtripMountPoint], Error> = ","    try ntripService.mountpoints(for: ntripInformation)","","let mountpoint: String = \/\/ ...","let message: GGAMessage = \/\/ ...","","let task: NtripTask = ","    try ntripService.task(","        for: ntripInformation, ","        atMountPoint: mountpoint, ","        message: message","    )","","let ntripState: AnyPublisher<StateNtripConnection>? = task?.ntripState"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/GPSService"},{"type":"text","text":" with a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Peripheral"},{"type":"text","text":", a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/BluetoothService"},{"type":"text","text":" and an optional "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/NtripTask"},{"type":"text","text":" to observe location data from the vigram peripheral. Additionally, a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/LaserService"},{"type":"text","text":" allows you to record laser distances over a given time interval."}]},{"type":"codeListing","syntax":"swift","code":["let gpsService: GPSService = ","    Vigram.gpsService(","        peripheral: peripheral, ","        bluetoothService: bluetoothService, ","        correctionTask: task","    )","","let coordinates: AnyPublisher<GPSCoordinate, Never> = ","    gpsService.coordinate","","let laserService: LaserService = ","    Vigram.laserService(peripheral: peripheral)","","let laserRecording: AnyPublisher<DeviceMessage.Measurement, Error> = ","    laserService.record(","        configuration: .init(shotMode: .auto, position: .bottom, duration: 60)","    )"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/SinglePointRecordingService"},{"type":"text","text":" to record single points over a given duration with increased accuracy."}]},{"type":"codeListing","syntax":"swift","code":["let singlePointService: SinglePointRecordingService = ","    Vigram.singlePointRecordingService(gpsService: gpsService)","let points: AnyPublisher<SinglePoint, Error> = ","    singlePointService.record(","        duration: 5, ","        updateInterval: 0.01, ","        with: CoordinateCorrection.Method.none","    )"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to use pedestrian or stationary dynamic state mode viDoc with SinglePoint measurements use this init"},{"type":"text","text":" "},{"type":"text","text":"Note: This option available on beta4.2"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Init without laser","let singlePointService: SinglePointRecordingService = ","    Vigram.singlePointRecordingService(gpsService: GPSService, peripheral: Peripheral, dynamicStateType: DynamicStateType)","","\/\/ Init with laser","let singlePointService: SinglePointRecordingService = Vigram.singlePointRecordingService(","    gpsService: GPSService, ","    laserService: LaserService, ","    peripheral: Peripheral, ","    dynamicStateType: DynamicStateType",")"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/vigramsdk\/gettingstarted"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/GettingStarted","interfaceLanguage":"swift"},"kind":"article","metadata":{"roleHeading":"Article","title":"Getting Started with VigramSDK","role":"article","modules":[{"name":"VigramSDK"}]},"hierarchy":{"paths":[["doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK"]]},"references":{"doc://com.vigram.VigramSDK/documentation/VigramSDK/BluetoothService":{"role":"symbol","title":"BluetoothService","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BluetoothService"}],"abstract":[{"type":"text","text":"A BluetoothService is used to handle bluetooth connections."}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/BluetoothService","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BluetoothService"}],"url":"\/documentation\/vigramsdk\/bluetoothservice"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/BluetoothService/disconnect()":{"role":"symbol","title":"disconnect()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"disconnect"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Disconnect to a current peripheral."}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/BluetoothService\/disconnect()","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/vigramsdk\/bluetoothservice\/disconnect()"},"doc://com.vigram.VigramSDK/documentation/VigramSDK":{"role":"collection","title":"VigramSDK","abstract":[],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK","kind":"symbol","type":"topic","url":"\/documentation\/vigramsdk"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/NtripTask":{"role":"symbol","title":"NtripTask","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NtripTask"}],"abstract":[{"type":"text","text":"A NtripTask requests RTK data over a NTRIP connection."}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/NtripTask","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NtripTask"}],"url":"\/documentation\/vigramsdk\/ntriptask"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/NtripService":{"role":"symbol","title":"NtripService","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NtripService"}],"abstract":[{"type":"text","text":"NtripService is used to search for NTRIP mountpoints for various NTRIP providers and create "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/NtripTask"},{"type":"text","text":" instances to access NTRIP data."}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/NtripService","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NtripService"}],"url":"\/documentation\/vigramsdk\/ntripservice"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/Peripheral":{"role":"symbol","title":"Peripheral","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Peripheral"}],"abstract":[{"type":"text","text":"Peripheral provides a write and receive interface to communicate with the viDoc device."}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Peripheral","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Peripheral"}],"url":"\/documentation\/vigramsdk\/peripheral"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/SinglePointRecordingService":{"role":"symbol","title":"SinglePointRecordingService","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SinglePointRecordingService"}],"abstract":[{"type":"text","text":"SinglePointRecordingService can be used to record single points over a given duration."},{"type":"text","text":" "},{"type":"text","text":"During the recording phase, the service will keep track of all the environment’s data and then merge individual measurements to one combined single point."}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/SinglePointRecordingService","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SinglePointRecordingService"}],"url":"\/documentation\/vigramsdk\/singlepointrecordingservice"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/Peripheral/start()":{"role":"symbol","title":"start()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"SingleEventPublisher","preciseIdentifier":"s:9VigramSDK20SingleEventPublishera"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Initializes the connection to the CBPeripheral. Make sure to call this method after connecting to the peripheral."}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Peripheral\/start()","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/vigramsdk\/peripheral\/start()"},"https://developer.apple.com/documentation/corebluetooth/cbperipheral":{"title":"CBPeripheral","titleInlineContent":[{"type":"codeVoice","code":"CBPeripheral"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/corebluetooth\/cbperipheral","url":"https:\/\/developer.apple.com\/documentation\/corebluetooth\/cbperipheral"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/GPSService":{"role":"symbol","title":"GPSService","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"GPSService"}],"abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/GPSService"},{"type":"text","text":" to observe location data, location quality characteristics and accuracy information."}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/GPSService","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GPSService"}],"url":"\/documentation\/vigramsdk\/gpsservice"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/LaserService":{"role":"symbol","title":"LaserService","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LaserService"}],"abstract":[{"type":"text","text":"Use a LaserService to start laser distance recording sessions with a given configuration."}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/LaserService","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LaserService"}],"url":"\/documentation\/vigramsdk\/laserservice"},"doc://com.vigram.VigramSDK/documentation/VigramSDK/Authentication":{"role":"symbol","title":"Authentication","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Authentication"}],"abstract":[{"type":"text","text":"First creates a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Authentication"},{"type":"text","text":" to check token and use SDK functions."}],"identifier":"doc:\/\/com.vigram.VigramSDK\/documentation\/VigramSDK\/Authentication","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Authentication"}],"url":"\/documentation\/vigramsdk\/authentication"}}}